version: 2 
jobs:
  build: 
    parallelism: 3
    docker:
      - image: circleci/ruby:2.6.5-stretch-node-browsers-legacy
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: 'test'
          MYSQL_USERNAME: 'root'
          MYSQL_PASSWORD: 'password'
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: 'password'
          
    steps: 
      - checkout
      
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: gem bundler install 
          command: |
            gem install bundler

      - run:
          name: Bundle install
          command: |
            bundle install
        
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            
      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: DB stay
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run: bundle exec rails db:create

      - run:
          name: Wait for DB
          command: bin/rails db:schema:load --trace

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results
                              
      - add_ssh_keys:
          fingerprints:
            - "a4:c9:de:b2:2c:f3:47:56:59:8e:07:e8:79:57:f8:ea"

      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy
                            